sites: [localhost,remote-cloud]

# Default site for examples 1-3
# This site runs tasks on the local machine
site.localhost {
    execution {
        type    : "local"                                # Execution is local
        URL     : "localhost"                            # Point at localhost to run locally
    }
    staging             : direct                         # Files are on the same machine, so can be accessed "directly"
    workDirectory       : "/mnt" # Directory where work is done
    maxParallelTasks    : 101                            # Maximum number of parallel tasks
    initialParallelTasks: 100                            # Maximum number of tasks at start
    app.get_list { executable: "/usr/bin/python" }                     # Two tasks to be found from commandline
    app.concatenate { executable: "/usr/bin/cat" }
    app.retrieve_files { 
        executable: "/usr/bin/python" 
        env.AWS_ACCESS_KEY_ID=${env.AWS_ACCESS_KEY_ID}
        env.AWS_SECRET_ACCESS_KEY=${env.AWS_SECRET_ACCESS_KEY}
        env.AWS_DEFAULT_REGION="us-west-2"
   }
}

site.remote-cloud {
    execution {
        type       : "coaster-persistent"
            URL        : "http://127.0.0.1:50010"         # URL of the remote machine to connect to
            jobManager : "local:local"                    # ssh-cl to connect to machine, run worker locally
         
    }
    staging             : "local"                     # Stage files from "local" system to ad-hoc-1
    workDirectory       : "/mnt"   # Location for intermediate files
    maxParallelTasks    : 100                          # Maximum number of parallel tasks
    initialParallelTasks: 40                          # Maximum number of tasks at start
    app.ingest { executable: "/usr/bin/python" }                    # One tasks to be found from commandline
    app.transfer_and_split { 
        executable: "/usr/bin/python"
	maxWallTime: "24:00:00"
        env.AWS_ACCESS_KEY_ID=${env.AWS_ACCESS_KEY_ID}
        env.AWS_SECRET_ACCESS_KEY=${env.AWS_SECRET_ACCESS_KEY}
        env.AWS_DEFAULT_REGION="us-west-2"
     }
}

TCPPortRange: "50000,51000"                           # TCP port range used by swift to communicate with remote sites
lazyErrors: false                                     # Swift fails immediately upon encountering an error
executionRetries: 0                                   # Set number of retries upon task failures
keepSiteDir: true                                     # Keep Site Dir (useful for debug)
providerStagingPinSwiftFiles: false                   # Pin staging files (useful for debug)
alwaysTransferWrapperLog: true                        # Transfer wrapper logs (useful for debug)
